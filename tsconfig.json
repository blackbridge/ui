{
	"$schema": "https://json.schemastore.org/tsconfig",
	"include": [
		"src", "./src/imports.d.ts"
	],
	"compilerOptions": {
		"rootDir": "src",
		"outDir": "dist",
		// JSX settings
		"jsx": "react-jsx", 
		"jsxImportSource": "preact",
	    "types": ["preact"],

		// Enable top-level await, and other modern ESM features.
		"target": "esnext",
		"module": "nodenext",
		// Enable node-style module resolution, for things like npm package imports.
		"moduleResolution": "nodenext",
		// Allow importing TypeScript files using their native extension (.ts(x)).
		"allowImportingTsExtensions": true,
		// Enforce the usage of type-only imports when needed, which helps avoiding bundling issues.
		"verbatimModuleSyntax": true,
		// Ensure that each file can be transpiled without relying on other imports.
		// This is redundant with the previous option, however it ensures that it's on even if someone disable `verbatimModuleSyntax`
		"isolatedModules": true,
		// Report an error when importing a file using a casing different from another import of the same file.
		"forceConsistentCasingInFileNames": true,
		// Properly support importing CJS modules in ESM
		"esModuleInterop": true,
		// Skip typechecking libraries and .d.ts files
		"skipLibCheck": true,
		// Allow JavaScript files to be imported
		"allowJs": true,

		// Strict mode
		"strict": true,
		"strictNullChecks": true,
	    "strictFunctionTypes": true,
	    "strictBindCallApply": true,
	    "strictPropertyInitialization": true,
	    "noImplicitThis": true,
	    "useUnknownInCatchVariables": true,
	    "alwaysStrict": true,
	    "noUnusedLocals": true,
	    "noUnusedParameters": true,
	    "noImplicitReturns": true
	}
}